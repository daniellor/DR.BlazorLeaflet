@page "/geojson"
@using System.Drawing
@using DR.BlazorLeaflet.Models

@inject IJSRuntime jsRuntime
@inject HttpClient Http

<div class="d-flex flex-column">
    <div class="form-inline p-2">
        <h1>Blazor Leaflet - GeoJson</h1>
    </div>
    <div class="flex-grow-1">
        @if(Map!=null)
        {
            <LeafletMap Map="Map" Height="80vh" />
        }
    </div>
    
</div>
@code
{

    private Map Map;
    private LatLng _startAt = new LatLng(47.5574007f, 16.3918687f);
    private string? geoJsonData = null;

    protected override async Task OnInitializedAsync()
    {

        var _map = new Map(jsRuntime)
            {
                Center = _startAt,
                Zoom = 4.8f
            };


        using (HttpResponseMessage response = await Http.GetAsync("_content/DR.BlazorLeaflet.Samples/geojson/geojsonsamples.json"))
        {
            geoJsonData = response.Content.ReadAsStringAsync().Result;
            response.EnsureSuccessStatusCode();
        }


        _map.OnInitialized += () =>
        {
            _map.AddLayer(new TileLayer
                {
                    UrlTemplate = "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
                    Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
                });

            _map.AddLayer(new GeoJsonDataLayer()
                {
                    GeoJsonData = geoJsonData,
                    
                }
            );

        };

        Map = _map;
        StateHasChanged();
    }


    private void ZoomMap()
    {
        Map.FitBounds(new PointF(45.943f, 24.967f), new PointF(46.943f, 25.967f), maxZoom: 5f);
    }

    private void PanToNY()
    {
        Map.PanTo(new PointF(40.713185f, -74.0072333f), animate: true, duration: 10f);
    }

}
